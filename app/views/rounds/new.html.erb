<div class="main-container">
  <div class="title-container centered-vertically"><h1>Options Round <%= @game_session.rounds.count + 1%></h1></div>
  <div class="content-container centered-vertically">
    <div class="white-container centered-vertically">
    <%= simple_form_for @round, url: game_session_rounds_path(@game_session), html:{class:"centered-vertically"} do |f| %>
      <%= f.button :submit,'Jouer', class: "btn-tim", id:"to-fire-camp" %>
      <%= button_tag "Options",type: 'button', class: "btn-tim", id:"round-options-btn" %>
      <div id="round-options-modal" class="modal">
        <div id="round-options-modal-content" class="modal-content">
          <div id="round-options-modal-header">
            <span class="close" id="close-round-options">&times;</span>
          </div>
          <div class="centered-vertically" id="round-options-modal-content-after-header">

            <h4>Choix de pages :</h4>


            <div id="easy-path">Générer un chemin "facile"</div>
            <div id="easy-path-suggestion"></div>
            <div class="info-bubble-pages" id="info-bubble-pages">
              <i class="fas fa-info-circle"></i>
            </div>


            <div id="page-choice-container">
              <%= f.input :start_page, label: false, label: "Page de début :", :collection => @wiki_pages, :prompt => "Page aléatoire", input_html: {class: "js-select2", onchange: "checkRecord()"} %>
              <%= f.input :end_page, label: false, label: "Page cible :", :collection => @wiki_pages, :prompt => "Page aléatoire", input_html: {class: "js-select2", onchange: "checkRecord()"}  %>
            </div>

            <div id="nombre-de-clicks-record">
              <p>Pas encore de record sur ce chemin</p>
            </div>

            <!-- <div id="force-cohesion"> -->

              <h4>Modes de jeu :</h4>
              <div class="info-bubble-modes" id="info-bubble-modes">
                <i class="fas fa-info-circle"></i>
              </div>
              <%= hidden_field_tag :game_mode, 'Premier arrivé' %>
              <div id="grid-container-options">
                <div class="grid-option" id="grid-option-time-limit">
                  <i class="far fa-clock"></i>
                  <div class="title-option">Time Limit!</div>
                  <div class="validation-option">
                    <i class="fas fa-check"></i>
                  </div>
                </div>

                <div class="grid-option" id="grid-option-click-limit">
                  <i class="fas fa-mouse-pointer"></i>
                  <div class="title-option">Click Limit!</div>
                  <div class="validation-option">
                    <i class="fas fa-check"></i>
                  </div>
                </div>
              </div>


              <h4>Options de jeu :</h4>
              <div class="info-bubble-options" id="info-bubble-options">
                <i class="fas fa-info-circle"></i>
              </div>
              <div id="grid-container-options">

                <div class="grid-option selectable-option selected" id="grid-option-search-bar">
                  <i class="fas fa-search"></i>
                  <div class="title-option">Search Bar!</div>
                  <div class="validation-option">
                    <i class="fas fa-check"></i>
                  </div>
                </div>

                <div class="grid-option selectable-option" id="grid-option-reverse">
                  <i class="fas fa-sync-alt"></i>
                  <div class="title-option">Reverse!</div>
                  <div class="validation-option">
                    <i class="fas fa-check"></i>
                  </div>
                </div>

                <div class="grid-option selectable-option" id="grid-option-back">
                  <i class="fas fa-chevron-circle-left"></i>
                  <div class="title-option">Back!</div>
                  <div class="validation-option">
                    <i class="fas fa-check"></i>
                  </div>
                </div>

              </div>

            <!-- </div> -->
            <%= f.input :game_options, label: false,
              collection: ['Standard', 'Avec questions', 'Sans aide de recherche', 'Où est Charlie', 'Battlefield', 'Sens-interdit'],
              default: 'Standard' %>
            <div class="not-visible">
              <%= f.input :search_bar, default: true %>
              <%= f.input :reverse, default: false %>
              <%= f.input :back, default: true %>
            </div>
            <%= button_tag "Jouer",type: 'submit', class: "btn-tim", id:"round-options-ok-btn" %>

          </div>
        </div>
      </div>
    <% end %>
  </div>
</div>

<div class="modal-info-pages">
  <div id="modal-info-pages">
    <span>Le choix des pages :<a href="#close" id="close-pages">&#215;</a></span>
    <p><strong>Par défault le choix des pages est aléatoire.</strong></p>
    <p><em>Note: , mais il est possible de choisir sa page de départ, sa page de fin ou les deux à la fois. Il est aussi possible de demander un couple de pages "facile" (considéré comme tel car ayant déjà été relié 5 clicks ou moins.</em></p>
  </div>
</div>

<div class="modal-info-modes">
  <div id="modal-info-modes">
    <span>Le choix des modes :<a href="#close" id="close-modes">&#215;</a></span>
    <p><strong>Premier arrivé :</strong> Mode de jeu par défault. La partie s'arrete lorsque l'un des joueurs arrive sur la page cible. Celui-ci gagne alors 100 points, les autres perdent autant de points que de nombres de clicks réalisés.</p>
    <p><strong>Limite de clicks : (en développement)</strong> Le créateur fixe une limite de clicks. La partie s'arrete individuellement pour chaque joueur, soit que celui-ci a trouver la page cible, soit qu'il a atteint le nombre maximum de clicks autorisés. Le classement se fait pour ceux qui ont trouvé la page cible par ordre croissant de nombre de click et pour ceux qui ont échoué, par ordre croissant de temps.</p>
    <p><strong>Limite de temps : (en développement)</strong> Le créateur fixe une limite de temps. La partie s'arrete individuellement pour chaque joueur, soit que celui-ci a trouver la page cible, soit qu'il a atteint le temps maximum autorisés. Le classement se fait pour ceux qui ont trouvé la page cible par ordre croissant de nombre de click et pour ceux qui ont échoué, par ordre croissant de clicks.</p>
    <p><em>Note: Il est possible de combiner les modes de jeu "limite de clicks" et "limite de temps" afin d'avoir une limite sur ces deux paramètres.</em></p>
  </div>
</div>

<div class="modal-info-options">
  <div id="modal-info-options">
    <span>Le choix des options :<a href="#close" id="close-options">&#215;</a></span>
    <p><strong>Search bar :</strong> Elle est active par défault. C'est une barre de recherche qui surligne en jaune (mais ne déplace pas la vue) les mots contenant la suite de charctères recherchées (en un seul bloc) dans l'article.</p>
    <p><strong>Reverse : (en développement)</strong></p>
    <p><strong>Précédent : (en développement)</strong></p>
    <p><em>Note: Il est possible de combiner plusieurs options de jeu dans le même round.</em></p>
  </div>
</div>

<script>

  // RIEN A FAIRE ICI - A REFACTO MAIS BESOIN POUR LA DEMO
  const roundStartPage = document.getElementById("round_start_page");
  const roundEndPage = document.getElementById("round_end_page");
  const recordSentence = document.getElementById("nombre-de-clicks-record");

  const lookInDB = (start_end) => {
  const requestOptions = {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
      'Accept': 'application/json'
    }
  }
  fetch(`http://${window.location.host}/path?${start_end}`, requestOptions)
    .then(response => response.json())
    .then((data) => {
      if (data.min_click === "") {
        recordSentence.innerHTML = "Pas encore de record sur ce chemin";
      } else {
        recordSentence.innerHTML = `Le record pour ce couple de pages est de : <strong>${data.min_click} clicks</strong>`;
      }
    });
  };

  const buildQueryString = (start, end) => {
    return new URLSearchParams({start_page: start, end_page: end}).toString();
  }


  const checkRecord = () => {
    const start_title = roundStartPage.value;
    const end_title = roundEndPage.value;
    const start_end = buildQueryString(start_title, end_title);
    lookInDB(start_end);
  }

</script>
